{
  "name": "PropertyRadar - Update List Webhook",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "propertyradar-update",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [100, 300],
      "webhookId": "propertyradar-list-update"
    },
    {
      "parameters": {
        "jsCode": "// Validate update payload\nconst body = $input.first().json.body || $input.first().json;\n\nif (!body.broker_id || !body.list_id || !Array.isArray(body.zip_codes)) {\n  throw new Error('Missing required fields: broker_id, list_id, zip_codes (array)');\n}\n\nconsole.log(`Updating PropertyRadar list: ${body.list_id}`);\nconsole.log(`New ZIPs: ${body.zip_codes.length} total`);\n\nreturn [{\n  json: {\n    broker_id: body.broker_id,\n    list_id: body.list_id,\n    zip_codes: body.zip_codes\n  }\n}];"
      },
      "id": "validate-update",
      "name": "Validate Update",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [300, 300]
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "=https://api.propertyradar.com/v1/lists/{{ $json.list_id }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify({\n  Criteria: [\n    {name: 'ZipFive', value: $json.zip_codes},\n    {name: 'Age', value: [[62, null]]},\n    {name: 'AvailableEquity', value: [[150000, null]]},\n    {name: 'EquityPercent', value: [[40, null]]},\n    {name: 'isSameMailingOrExempt', value: [1]},\n    {name: 'PropertyType', value: [{name: 'PType', value: ['SFR', 'DPX', 'TPX', 'FPX', 'CND']}]},\n    {name: 'AVM', value: [[400000, 3000000]]},\n    {name: 'CLTV', value: [[null, 60]]}\n  ]\n}) }}",
        "options": {}
      },
      "id": "update-pr-list",
      "name": "Update PropertyRadar List",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [500, 300],
      "credentials": {
        "httpBearerAuth": {
          "id": "81i7WbQilIMSh4E3",
          "name": "PropertyRadar"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Prepare success response\nconst updateData = $('Validate Update').first().json;\n\nconsole.log('âœ“ PropertyRadar list updated');\n\nreturn [{\n  json: {\n    success: true,\n    message: 'PropertyRadar list criteria updated',\n    data: {\n      list_id: updateData.list_id,\n      zip_count: updateData.zip_codes.length\n    }\n  }\n}];"
      },
      "id": "prepare-response",
      "name": "Prepare Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [700, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "id": "webhook-response",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 300]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Validate Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Update": {
      "main": [
        [
          {
            "node": "Update PropertyRadar List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update PropertyRadar List": {
      "main": [
        [
          {
            "node": "Prepare Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Response": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "pinData": {},
  "tags": []
}

