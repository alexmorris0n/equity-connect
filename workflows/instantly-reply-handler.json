{
    "nodes": [
      {
        "parameters": {
          "httpMethod": "POST",
          "path": "instantly-reply-webhook",
          "options": {}
        },
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 2.1,
        "position": [
          -2432,
          560
        ],
        "id": "6e42de5f-2339-4f3c-8f2f-8bdb66823895",
        "name": "Instantly Reply Webhook",
        "webhookId": "instantly-reply-webhook"
      },
      {
        "parameters": {
          "jsCode": "// Extract reply data from Instantly webhook\nconst webhookData = $input.first().json;\n\nconsole.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');\nconsole.log('üìß Reply Received');\nconsole.log(`From: ${webhookData.from_email || webhookData.lead_email}`);\nconsole.log(`Subject: ${webhookData.subject || 'N/A'}`);\nconsole.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');\n\nreturn [{\n  json: {\n    lead_email: webhookData.from_email || webhookData.lead_email,\n    reply_text: webhookData.body || webhookData.message || webhookData.text,\n    subject: webhookData.subject || '',\n    campaign_id: webhookData.campaign_id || null,\n    replied_at: webhookData.timestamp || new Date().toISOString(),\n    reply_to_uuid: webhookData.email_id || webhookData.uuid || webhookData.id,\n    sender_account: webhookData.to_email || webhookData.eaccount,\n    raw_webhook: webhookData\n  }\n}];"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -2208,
          560
        ],
        "id": "b3bea805-e1a3-4dc9-ac13-d2e0a2c91613",
        "name": "Extract Reply Data"
      },
      {
        "parameters": {
          "operation": "get",
          "tableId": "leads",
          "filters": {
            "conditions": [
              {
                "keyName": "primary_email",
                "keyValue": "={{ $json.lead_email }}"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          -1984,
          560
        ],
        "id": "ecdf1700-1f95-49cd-90ae-d1622190a482",
        "name": "Lookup Lead",
        "credentials": {
          "supabaseApi": {
            "id": "pvE2B3BDrLhctd5B",
            "name": "SupaBase Equity Connect"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "// Parse AI response and merge with lead data\nconst aiResponse = $input.first().json;\nconst lead = $('Lookup Lead').first().json;\nconst replyData = $('Extract Reply Data').first().json;\n\n// Extract JSON from AI response\nlet analysis;\ntry {\n  const content = aiResponse.choices[0].message.content;\n  analysis = JSON.parse(content);\n} catch (e) {\n  console.error('Failed to parse AI response:', e);\n  // Fallback to neutral intent\n  analysis = {\n    contains_phone: false,\n    phone_number: null,\n    has_question: false,\n    question_topic: 'none',\n    sentiment: 'NEUTRAL',\n    primary_intent: 'general_interest',\n    needs_clarification: true,\n    confidence: 50\n  };\n}\n\nconsole.log('ü§ñ AI Analysis:', JSON.stringify(analysis, null, 2));\n\nreturn [{\n  json: {\n    ...replyData,\n    lead_id: lead.id,\n    lead_first_name: lead.first_name,\n    lead_status: lead.status,\n    property_city: lead.property_city,\n    property_value: lead.property_value,\n    estimated_equity: lead.estimated_equity,\n    assigned_broker_id: lead.assigned_broker_id,\n    ...analysis\n  }\n}];"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -1408,
          560
        ],
        "id": "ee3331bf-dd0b-43f4-8dcb-9831d4c674c6",
        "name": "Parse AI Analysis",
        "notes": "Merge AI analysis with lead data. Output has primary_intent field for routing."
      },
      {
        "parameters": {
          "jsCode": "// ROUTE 1: Phone number provided - trigger VAPI call\nconst data = $input.first().json;\n\nconsole.log('üìû Phone provided:', data.phone_number);\n\nreturn [{\n  json: {\n    lead_id: data.lead_id,\n    lead_first_name: data.lead_first_name,\n    phone_number: data.phone_number,\n    property_city: data.property_city,\n    property_value: data.property_value,\n    estimated_equity: data.estimated_equity,\n    trigger_vapi: true\n  }\n}];"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -960,
          272
        ],
        "id": "6486c047-4a6a-4d05-b5bf-693927d70a30",
        "name": "Prepare VAPI Call",
        "notes": "Connect from Parse AI Analysis when primary_intent = 'provide_phone'"
      },
      {
        "parameters": {
          "jsCode": "// ROUTE 2: Question detected - send answer + remind about phone\nconst data = $input.first().json;\n\n// Simple question responses\nconst answers = {\n  fees: \"Great question! There are no upfront fees - costs are typically rolled into the loan. The main costs are similar to a regular mortgage: origination fee (~2%), closing costs, and mortgage insurance. I can have Barbara walk through the exact numbers for your situation.\\n\\nWhat's the best number to reach you at?\",\n  \n  heirs: \"Excellent question! Your heirs will inherit any remaining equity after the loan is paid off. The loan doesn't come due until you permanently move out or pass away. Many families use reverse mortgages specifically to preserve liquid assets for heirs while using home equity for living expenses.\\n\\nI'd love to have Barbara explain this in detail - what's your phone number?\",\n  \n  timeline: \"The process typically takes 4-6 weeks from application to closing. However, Barbara can pre-qualify you in about 10 minutes and give you exact numbers right away.\\n\\nWhat's the best number for her to reach you?\",\n  \n  eligibility: \"The main requirements are: 62+ years old, own your home (or have significant equity), and live there as your primary residence. Based on your property value of $${data.property_value}, you likely qualify!\\n\\nWant Barbara to verify your eligibility? What's your phone number?\",\n  \n  general: \"I'm happy to answer that! However, Barbara can give you much more detailed information specific to your situation in just 5-10 minutes.\\n\\nWhat's the best number to reach you at?\"\n};\n\nconst answer = answers[data.question_topic] || answers.general;\n\nconst emailBody = `${data.lead_first_name},\\n\\n${answer}\\n\\n{{accountSignature}}\\nEquity Connect`;\n\nconsole.log('‚ùì Answering question:', data.question_topic);\n\nreturn [{\n  json: {\n    lead_id: data.lead_id,\n    lead_email: data.lead_email,\n    lead_first_name: data.lead_first_name,\n    email_subject: `Re: ${data.subject}`,\n    email_body: emailBody,\n    reply_to_uuid: data.reply_to_uuid,\n    sender_account: data.sender_account\n  }\n}];"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -960,
          464
        ],
        "id": "c65d5b45-c33f-4bcc-aafb-48f99999d43f",
        "name": "Answer Question + Remind",
        "notes": "Connect from Parse AI Analysis when primary_intent = 'ask_question'"
      },
      {
        "parameters": {
          "jsCode": "// ROUTE 3: Unsubscribe - mark as closed\nconst data = $input.first().json;\n\nconsole.log('üõë Unsubscribe request from:', data.lead_first_name);\n\nreturn [{\n  json: {\n    lead_id: data.lead_id,\n    status: 'do_not_contact',\n    campaign_status: 'do_not_contact',\n    updated_at: new Date().toISOString()\n  }\n}];"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -960,
          656
        ],
        "id": "9aaebcb2-7212-43d5-897e-3b4190c34ff6",
        "name": "Mark as Unsubscribed",
        "notes": "Connect from Parse AI Analysis when primary_intent = 'unsubscribe'"
      },
      {
        "parameters": {
          "jsCode": "// ROUTE 4: General interest - ask for phone number\nconst data = $input.first().json;\n\nconst emailBody = `Great to hear from you, ${data.lead_first_name}!\\n\\nI'd love to have Barbara, our pre-qualification specialist, give you a quick call to verify your eligibility and answer any questions. This usually takes about 5-10 minutes.\\n\\nWhat's the best phone number to reach you at?\\n\\n{{accountSignature}}\\nEquity Connect`;\n\nconsole.log('üëã Asking for phone number from:', data.lead_first_name);\n\nreturn [{\n  json: {\n    lead_id: data.lead_id,\n    lead_email: data.lead_email,\n    lead_first_name: data.lead_first_name,\n    email_subject: `Re: ${data.subject}`,\n    email_body: emailBody,\n    reply_to_uuid: data.reply_to_uuid,\n    sender_account: data.sender_account,\n    update_status: 'awaiting_phone'\n  }\n}];"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -960,
          848
        ],
        "id": "22ae6ddf-c5fc-4040-8f78-c9b6147baf06",
        "name": "Ask for Phone Number",
        "notes": "Connect from Parse AI Analysis when primary_intent = 'general_interest'"
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://api.instantly.ai/api/v1/email/reply",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "instantlyApi",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          },
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={{ {\n  \"reply_to_uuid\": $json.reply_to_uuid,\n  \"eaccount\": $json.sender_account,\n  \"subject\": $json.email_subject,\n  \"body\": {\n    \"text\": $json.email_body\n  }\n} }}",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          -736,
          656
        ],
        "id": "9aa4b559-f7d7-45b6-bc25-a62fd625d36a",
        "name": "Send Email Reply",
        "credentials": {
          "instantlyApi": {
            "id": "TSGbMOFEJY9CmhHW",
            "name": "Instantly account"
          }
        },
        "notes": "Sends email reply via Instantly API. Connect from: Answer Question OR Ask for Phone"
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://api.vapi.ai/call",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpHeaderAuth",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          },
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={{ {\n  \"phoneNumber\": $json.phone_number,\n  \"assistantId\": \"YOUR_BARBARA_ASSISTANT_ID\",\n  \"customer\": {\n    \"firstName\": $json.lead_first_name,\n    \"propertyCity\": $json.property_city,\n    \"propertyValue\": $json.property_value,\n    \"estimatedEquity\": $json.estimated_equity\n  }\n} }}",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          -736,
          272
        ],
        "id": "8fcfc22d-4c98-424b-b846-1778fb9d9a59",
        "name": "Trigger VAPI Call",
        "notes": "TODO: Replace YOUR_BARBARA_ASSISTANT_ID. Connect from: Prepare VAPI Call"
      },
      {
        "parameters": {
          "operation": "update",
          "tableId": "leads",
          "fieldsUi": {
            "fieldValues": [
              {
                "fieldId": "status",
                "fieldValue": "={{ $json.status || 'replied' }}"
              },
              {
                "fieldId": "campaign_status",
                "fieldValue": "={{ $json.campaign_status || 'replied' }}"
              },
              {
                "fieldId": "last_reply_at",
                "fieldValue": "={{ $now.toISO() }}"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          -736,
          464
        ],
        "id": "f4fb5d4e-b2f7-4a0e-8dca-792fca6f0daa",
        "name": "Update Lead Status",
        "credentials": {
          "supabaseApi": {
            "id": "pvE2B3BDrLhctd5B",
            "name": "SupaBase Equity Connect"
          }
        },
        "notes": "Connect ALL routes here to update database"
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.noOp",
        "typeVersion": 1,
        "position": [
          -512,
          464
        ],
        "id": "fab82f82-35ee-435a-bd08-1dfb9fc509d2",
        "name": "Reply Processed"
      },
      {
        "parameters": {
          "rules": {
            "values": [
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "leftValue": "={{ $json.primary_intent }}",
                      "rightValue": "provide_phone",
                      "operator": {
                        "type": "string",
                        "operation": "equals"
                      },
                      "id": "be115c1d-8c44-40f1-b4ff-80f8c4d84289"
                    }
                  ],
                  "combinator": "and"
                }
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "1a92cced-7430-4153-8b20-f7afcc20e501",
                      "leftValue": "={{ $json.primary_intent }}",
                      "rightValue": "ask_question",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                }
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "a87e7a04-ad9b-42c1-88e5-926379314730",
                      "leftValue": "={{ $json.primary_intent }}",
                      "rightValue": "unsubscribe",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                }
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "d573a9f0-87c8-43b3-9e08-0359a3ea8a8d",
                      "leftValue": "={{ $json.primary_intent }}",
                      "rightValue": "general_interest",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                }
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.switch",
        "typeVersion": 3.3,
        "position": [
          -1184,
          528
        ],
        "id": "11ea80a3-9a2a-4592-8e59-1c4d09f441bc",
        "name": "Switch"
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "={{ {\n  \"model\": \"anthropic/claude-sonnet-4.5\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": `Analyze this email reply from a senior (62+) interested in reverse mortgages and return ONLY valid JSON.\n\nReply text: \"${$('Extract Reply Data').first().json.reply_text}\"\n\nReturn this exact JSON structure:\n{\n  \"contains_phone\": true or false,\n  \"phone_number\": \"extracted phone number in format XXX-XXX-XXXX or null\",\n  \"has_question\": true or false,\n  \"question_topic\": \"fees\" or \"heirs\" or \"timeline\" or \"eligibility\" or \"general\" or \"none\",\n  \"sentiment\": \"POSITIVE\" or \"NEGATIVE\" or \"NEUTRAL\",\n  \"primary_intent\": \"provide_phone\" or \"ask_question\" or \"unsubscribe\" or \"general_interest\",\n  \"needs_clarification\": true or false,\n  \"confidence\": 0-100\n}\n\nRules:\n- If reply contains ANY phone number format (555-1234, 5551234, five five five...), set contains_phone=true\n- If reply has question words (what, how, why, can, will, is), set has_question=true  \n- If reply says stop/unsubscribe/remove/no thanks, primary_intent=\"unsubscribe\"\n- If reply gives phone number, primary_intent=\"provide_phone\"\n- If reply asks questions but no phone, primary_intent=\"ask_question\"\n- If reply is positive but no phone/question, primary_intent=\"general_interest\"\n\nReturn ONLY the JSON, no explanation.`\n    }\n  ],\n  \"temperature\": 0.3\n} }}",
          "batching": {}
        },
        "type": "@n8n/n8n-nodes-langchain.chainLlm",
        "typeVersion": 1.7,
        "position": [
          -1760,
          560
        ],
        "id": "21716438-5ef8-496d-ab47-b81b5f2ec1cb",
        "name": "Basic LLM Chain"
      },
      {
        "parameters": {
          "model": "anthropic/claude-sonnet-4.5",
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "typeVersion": 1,
        "position": [
          -1688,
          784
        ],
        "id": "896f677b-7ff3-4f24-9ba0-738657ea43dd",
        "name": "OpenRouter Chat Model",
        "credentials": {
          "openRouterApi": {
            "id": "5pEBmsekpDy6GZN0",
            "name": "OpenRouter n8n"
          }
        }
      }
    ],
    "connections": {
      "Instantly Reply Webhook": {
        "main": [
          [
            {
              "node": "Extract Reply Data",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Extract Reply Data": {
        "main": [
          [
            {
              "node": "Lookup Lead",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Lookup Lead": {
        "main": [
          [
            {
              "node": "Basic LLM Chain",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Parse AI Analysis": {
        "main": [
          [
            {
              "node": "Switch",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Prepare VAPI Call": {
        "main": [
          [
            {
              "node": "Trigger VAPI Call",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Answer Question + Remind": {
        "main": [
          [
            {
              "node": "Update Lead Status",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Mark as Unsubscribed": {
        "main": [
          [
            {
              "node": "Send Email Reply",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Update Lead Status": {
        "main": [
          [
            {
              "node": "Reply Processed",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Switch": {
        "main": [
          [
            {
              "node": "Prepare VAPI Call",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Answer Question + Remind",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Mark as Unsubscribed",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Ask for Phone Number",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Basic LLM Chain": {
        "main": [
          [
            {
              "node": "Parse AI Analysis",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "OpenRouter Chat Model": {
        "ai_languageModel": [
          [
            {
              "node": "Basic LLM Chain",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      }
    },
    "pinData": {},
    "meta": {
      "templateCredsSetupCompleted": true,
      "instanceId": "4ca45576dabef27a95f92525a5f6415fb3e8061f7037b2ec7fb4ba1bb1cb56c0"
    }
  }