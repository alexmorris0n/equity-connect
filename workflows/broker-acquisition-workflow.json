{
  "name": "Broker Acquisition & Management Workflow",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 9 * * 1"
            }
          ]
        }
      },
      "id": "weekly-broker-research-trigger",
      "name": "Weekly Broker Research Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "url": "https://api.nmls.org/v1/brokers",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "nmlsApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "state",
              "value": "={{ $json.targetState }}"
            },
            {
              "name": "license_type",
              "value": "reverse_mortgage"
            },
            {
              "name": "status",
              "value": "active"
            },
            {
              "name": "limit",
              "value": "100"
            }
          ]
        }
      },
      "id": "nmls-broker-search",
      "name": "NMLS Broker Search",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "license-active",
              "leftValue": "={{ $json.license_status }}",
              "rightValue": "active",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "no-discipline",
              "leftValue": "={{ $json.disciplinary_actions }}",
              "rightValue": "0",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            },
            {
              "id": "experience-minimum",
              "leftValue": "={{ $json.years_experience }}",
              "rightValue": "2",
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "broker-qualification-filter",
      "name": "Broker Qualification Filter",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "url": "https://api.linkedin.com/v2/people",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "reverse mortgage broker {{ $json.city }} {{ $json.state }}"
            },
            {
              "name": "count",
              "value": "10"
            }
          ]
        }
      },
      "id": "linkedin-broker-search",
      "name": "LinkedIn Broker Search",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 300]
    },
    {
      "parameters": {
        "operation": "create",
        "table": "broker_prospects",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "nmls_id": "={{ $json.nmls_id }}",
            "first_name": "={{ $json.first_name }}",
            "last_name": "={{ $json.last_name }}",
            "email": "={{ $json.email }}",
            "phone": "={{ $json.phone }}",
            "company": "={{ $json.company }}",
            "city": "={{ $json.city }}",
            "state": "={{ $json.state }}",
            "license_status": "={{ $json.license_status }}",
            "years_experience": "={{ $json.years_experience }}",
            "linkedin_url": "={{ $json.linkedin_url }}",
            "qualification_score": "={{ $json.qualification_score }}",
            "status": "prospect",
            "source": "nmls_research",
            "created_date": "={{ $now }}"
          }
        }
      },
      "id": "save-broker-prospect",
      "name": "Save Broker Prospect",
      "type": "n8n-nodes-base.softr",
      "typeVersion": 1,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 10 * * 1-5"
            }
          ]
        }
      },
      "id": "daily-outreach-trigger",
      "name": "Daily Outreach Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [240, 500]
    },
    {
      "parameters": {
        "operation": "getAll",
        "table": "broker_prospects",
        "filterType": "manual",
        "conditions": {
          "mappingMode": "defineBelow",
          "value": {
            "status": "prospect",
            "last_contact_date": "={{ $now.minus({days: 7}) }}"
          }
        },
        "limit": 20
      },
      "id": "get-broker-prospects",
      "name": "Get Broker Prospects",
      "type": "n8n-nodes-base.softr",
      "typeVersion": 1,
      "position": [460, 500]
    },
    {
      "parameters": {
        "url": "https://api.instantly.ai/api/v1/campaigns/send",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "instantlyApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "campaign_id",
              "value": "broker_acquisition_campaign"
            },
            {
              "name": "to",
              "value": "={{ $json.email }}"
            },
            {
              "name": "subject",
              "value": "Exclusive Reverse Mortgage Leads - {{ $json.first_name }}"
            },
            {
              "name": "html",
              "value": "={{ $json.email_template }}"
            },
            {
              "name": "variables",
              "value": "={{ JSON.stringify({broker_name: $json.first_name, location: $json.city + ', ' + $json.state, company: $json.company}) }}"
            }
          ]
        }
      },
      "id": "send-broker-email",
      "name": "Send Broker Email",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 500]
    },
    {
      "parameters": {
        "operation": "update",
        "table": "broker_prospects",
        "id": "={{ $json.id }}",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "last_contact_date": "={{ $now }}",
            "contact_count": "={{ $json.contact_count + 1 }}",
            "last_contact_type": "email"
          }
        }
      },
      "id": "update-broker-contact",
      "name": "Update Broker Contact",
      "type": "n8n-nodes-base.softr",
      "typeVersion": 1,
      "position": [900, 500]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 14 * * 1-5"
            }
          ]
        }
      },
      "id": "linkedin-outreach-trigger",
      "name": "LinkedIn Outreach Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [240, 700]
    },
    {
      "parameters": {
        "operation": "getAll",
        "table": "broker_prospects",
        "filterType": "manual",
        "conditions": {
          "mappingMode": "defineBelow",
          "value": {
            "status": "prospect",
            "linkedin_url": "not_null",
            "linkedin_contacted": "false"
          }
        },
        "limit": 10
      },
      "id": "get-linkedin-prospects",
      "name": "Get LinkedIn Prospects",
      "type": "n8n-nodes-base.softr",
      "typeVersion": 1,
      "position": [460, 700]
    },
    {
      "parameters": {
        "url": "https://api.linkedin.com/v2/messaging/conversations",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "recipients",
              "value": "=[{{ $json.linkedin_url }}]"
            },
            {
              "name": "subject",
              "value": "Reverse Mortgage Lead Partnership"
            },
            {
              "name": "body",
              "value": "Hi {{ $json.first_name }}, I help reverse mortgage brokers get more qualified leads. Would you be interested in learning more?"
            }
          ]
        }
      },
      "id": "send-linkedin-message",
      "name": "Send LinkedIn Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 700]
    },
    {
      "parameters": {
        "operation": "update",
        "table": "broker_prospects",
        "id": "={{ $json.id }}",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "linkedin_contacted": "true",
            "last_contact_date": "={{ $now }}",
            "contact_count": "={{ $json.contact_count + 1 }}",
            "last_contact_type": "linkedin"
          }
        }
      },
      "id": "update-linkedin-contact",
      "name": "Update LinkedIn Contact",
      "type": "n8n-nodes-base.softr",
      "typeVersion": 1,
      "position": [900, 700]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 16 * * 1-5"
            }
          ]
        }
      },
      "id": "follow-up-trigger",
      "name": "Follow-up Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [240, 900]
    },
    {
      "parameters": {
        "operation": "getAll",
        "table": "broker_prospects",
        "filterType": "manual",
        "conditions": {
          "mappingMode": "defineBelow",
          "value": {
            "status": "prospect",
            "last_contact_date": "={{ $now.minus({days: 3}) }}",
            "contact_count": "1"
          }
        },
        "limit": 15
      },
      "id": "get-follow-up-prospects",
      "name": "Get Follow-up Prospects",
      "type": "n8n-nodes-base.softr",
      "typeVersion": 1,
      "position": [460, 900]
    },
    {
      "parameters": {
        "url": "https://api.instantly.ai/api/v1/campaigns/send",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "instantlyApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "campaign_id",
              "value": "broker_follow_up_campaign"
            },
            {
              "name": "to",
              "value": "={{ $json.email }}"
            },
            {
              "name": "subject",
              "value": "Quick question about your reverse mortgage business"
            },
            {
              "name": "html",
              "value": "={{ $json.follow_up_template }}"
            }
          ]
        }
      },
      "id": "send-follow-up-email",
      "name": "Send Follow-up Email",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 900]
    },
    {
      "parameters": {
        "operation": "update",
        "table": "broker_prospects",
        "id": "={{ $json.id }}",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "last_contact_date": "={{ $now }}",
            "contact_count": "={{ $json.contact_count + 1 }}",
            "last_contact_type": "follow_up"
          }
        }
      },
      "id": "update-follow-up-contact",
      "name": "Update Follow-up Contact",
      "type": "n8n-nodes-base.softr",
      "typeVersion": 1,
      "position": [900, 900]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 9 * * 1"
            }
          ]
        }
      },
      "id": "broker-performance-trigger",
      "name": "Broker Performance Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [240, 1100]
    },
    {
      "parameters": {
        "operation": "getAll",
        "table": "brokers",
        "filterType": "manual",
        "conditions": {
          "mappingMode": "defineBelow",
          "value": {
            "status": "active"
          }
        }
      },
      "id": "get-active-brokers",
      "name": "Get Active Brokers",
      "type": "n8n-nodes-base.softr",
      "typeVersion": 1,
      "position": [460, 1100]
    },
    {
      "parameters": {
        "operation": "getAll",
        "table": "appointments",
        "filterType": "manual",
        "conditions": {
          "mappingMode": "defineBelow",
          "value": {
            "broker_id": "={{ $json.id }}",
            "appointment_date": "={{ $now.minus({days: 30}) }}"
          }
        }
      },
      "id": "get-broker-appointments",
      "name": "Get Broker Appointments",
      "type": "n8n-nodes-base.softr",
      "typeVersion": 1,
      "position": [680, 1100]
    },
    {
      "parameters": {
        "operation": "update",
        "table": "brokers",
        "id": "={{ $json.id }}",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "monthly_appointments": "={{ $json.appointment_count }}",
            "monthly_shows": "={{ $json.show_count }}",
            "conversion_rate": "={{ $json.show_count / $json.appointment_count }}",
            "performance_score": "={{ $json.performance_score }}",
            "last_performance_update": "={{ $now }}"
          }
        }
      },
      "id": "update-broker-performance",
      "name": "Update Broker Performance",
      "type": "n8n-nodes-base.softr",
      "typeVersion": 1,
      "position": [900, 1100]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 10 * * 1"
            }
          ]
        }
      },
      "id": "broker-retention-trigger",
      "name": "Broker Retention Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [240, 1300]
    },
    {
      "parameters": {
        "operation": "getAll",
        "table": "brokers",
        "filterType": "manual",
        "conditions": {
          "mappingMode": "defineBelow",
          "value": {
            "status": "active",
            "last_activity": "={{ $now.minus({days: 14}) }}",
            "performance_score": "lt:0.5"
          }
        }
      },
      "id": "get-at-risk-brokers",
      "name": "Get At-Risk Brokers",
      "type": "n8n-nodes-base.softr",
      "typeVersion": 1,
      "position": [460, 1300]
    },
    {
      "parameters": {
        "url": "https://api.instantly.ai/api/v1/campaigns/send",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "instantlyApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "campaign_id",
              "value": "broker_retention_campaign"
            },
            {
              "name": "to",
              "value": "={{ $json.email }}"
            },
            {
              "name": "subject",
              "value": "How can we help you succeed with reverse mortgage leads?"
            },
            {
              "name": "html",
              "value": "={{ $json.retention_template }}"
            }
          ]
        }
      },
      "id": "send-retention-email",
      "name": "Send Retention Email",
      "type": "n8n-nodes-base.softr",
      "typeVersion": 1,
      "position": [680, 1300]
    }
  ],
  "connections": {
    "weekly-broker-research-trigger": {
      "main": [
        [
          {
            "node": "nmls-broker-search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "nmls-broker-search": {
      "main": [
        [
          {
            "node": "broker-qualification-filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "broker-qualification-filter": {
      "main": [
        [
          {
            "node": "linkedin-broker-search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "linkedin-broker-search": {
      "main": [
        [
          {
            "node": "save-broker-prospect",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "daily-outreach-trigger": {
      "main": [
        [
          {
            "node": "get-broker-prospects",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-broker-prospects": {
      "main": [
        [
          {
            "node": "send-broker-email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send-broker-email": {
      "main": [
        [
          {
            "node": "update-broker-contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "linkedin-outreach-trigger": {
      "main": [
        [
          {
            "node": "get-linkedin-prospects",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-linkedin-prospects": {
      "main": [
        [
          {
            "node": "send-linkedin-message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send-linkedin-message": {
      "main": [
        [
          {
            "node": "update-linkedin-contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "follow-up-trigger": {
      "main": [
        [
          {
            "node": "get-follow-up-prospects",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-follow-up-prospects": {
      "main": [
        [
          {
            "node": "send-follow-up-email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send-follow-up-email": {
      "main": [
        [
          {
            "node": "update-follow-up-contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "broker-performance-trigger": {
      "main": [
        [
          {
            "node": "get-active-brokers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-active-brokers": {
      "main": [
        [
          {
            "node": "get-broker-appointments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-broker-appointments": {
      "main": [
        [
          {
            "node": "update-broker-performance",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "broker-retention-trigger": {
      "main": [
        [
          {
            "node": "get-at-risk-brokers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-at-risk-brokers": {
      "main": [
        [
          {
            "node": "send-retention-email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-01-15T10:00:00.000Z",
  "versionId": "1"
}
