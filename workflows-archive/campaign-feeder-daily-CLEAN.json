{
    "nodes": [
      {
        "parameters": {
          "rule": {
            "interval": [
              {
                "triggerAtHour": 8
              }
            ]
          }
        },
        "id": "fa3dce91-70df-48ee-89fb-f0f5beac944d",
        "name": "Daily Trigger (8am)",
        "type": "n8n-nodes-base.scheduleTrigger",
        "typeVersion": 1.2,
        "position": [
          -624,
          -128
        ]
      },
      {
        "parameters": {
          "operation": "getAll",
          "tableId": "vw_campaign_ready_leads",
          "returnAll": true
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          -400,
          -128
        ],
        "id": "25791bfa-c18a-4051-aa05-05c757a2bab9",
        "name": "Get Campaign Ready Leads",
        "credentials": {
          "supabaseApi": {
            "id": "pvE2B3BDrLhctd5B",
            "name": "SupaBase Equity Connect"
          }
        }
      },
      {
        "parameters": {
          "options": {}
        },
        "id": "70d3730b-1127-4d88-a735-46609445d9fa",
        "name": "Loop Over Leads",
        "type": "n8n-nodes-base.splitInBatches",
        "typeVersion": 3,
        "position": [
          -176,
          -128
        ]
      },
      {
        "parameters": {
          "operation": "get",
          "tableId": "campaigns",
          "filters": {
            "conditions": [
              {
                "keyName": "archetype",
                "keyValue": "={{ $json.next_archetype }}"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          288,
          -112
        ],
        "id": "8ec22ab0-3a7d-4b87-880b-77af97bb90ed",
        "name": "Get Campaign Config",
        "credentials": {
          "supabaseApi": {
            "id": "pvE2B3BDrLhctd5B",
            "name": "SupaBase Equity Connect"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "// FRESH LEADS ONLY - Exclusive campaign assignment (Option A)\n// Assigns ONE campaign based on property data, no rotation\nconst lead = $input.first().json;\n\nconst equityAmount = lead.estimated_equity || 0;\nconst isFreeAndClear = lead.radar_property_data?.isFreeAndClear || 0;\nconst history = lead.campaign_history || [];\n\n// Skip if lead already has campaign history (not fresh)\nif (history.length > 0) {\n  console.log(`⛔ ${lead.first_name} ${lead.last_name} already in campaign - skip (not fresh)`);\n  return [];  // Skip - this workflow is for fresh leads only\n}\n\n// Assign campaign based on property data (Option A - Exclusive)\nlet assignedArchetype = '';\nif (equityAmount > 500000) {\n  assignedArchetype = 'high_equity_special';\n} else if (isFreeAndClear === 1) {\n  assignedArchetype = 'cash_unlocked';\n} else {\n  assignedArchetype = 'no_more_payments';\n}\n\nconsole.log(`🆕 Fresh lead: ${lead.first_name} ${lead.last_name} → ${assignedArchetype}`);\nconsole.log(`   Equity: $${equityAmount.toLocaleString()} | Free & Clear: ${isFreeAndClear === 1 ? 'Yes' : 'No'}`);\n\n// Calculate equity ranges for merge fields\nconst equity50 = Math.round(equityAmount * 0.50);\nconst equity60 = Math.round(equityAmount * 0.60);\nconst equityShort = `$${Math.round(equityAmount / 1000)}K`;\n\n// Estimate monthly payment (rough calculation: 40% LTV at 0.5% monthly rate)\nconst propertyValue = lead.property_value || 0;\nconst estimatedPayment = Math.round((propertyValue * 0.4) * 0.005);\n\n// Property value range (±10% for social proof)\nconst valueLow = Math.round(propertyValue * 0.9 / 1000) * 1000;\nconst valueHigh = Math.round(propertyValue * 1.1 / 1000) * 1000;\nconst valueRange = `$${(valueLow/1000).toFixed(0)}K-$${(valueHigh/1000).toFixed(0)}K`;\n\nreturn [{\n  json: {\n    ...lead,\n    next_archetype: assignedArchetype,\n    campaign_round: 1,\n    is_retry: false,\n    // Calculated fields for Instantly merge fields\n    equity_50_amount: equity50,\n    equity_60_amount: equity60,\n    equity_short: equityShort,\n    estimated_monthly_payment: estimatedPayment,\n    property_value_range: valueRange,\n    entry_timestamp: new Date().toISOString()\n  }\n}];"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          64,
          -112
        ],
        "id": "0a50276f-827a-4226-b251-b29943f67f0b",
        "name": "Assign Campaign (Fresh Leads Only)"
      },
      {
        "parameters": {
          "resource": "lead",
          "operation": "addToCampaign",
          "campaign": {
            "__rl": true,
            "mode": "id",
            "value": "={{ $json.instantly_campaign_id }}"
          },
          "email": "={{ $('Assign Campaign (Fresh Leads Only)').first().json.primary_email }}",
          "firstName": "={{ $('Assign Campaign (Fresh Leads Only)').first().json.first_name }}",
          "lastName": "={{ $('Assign Campaign (Fresh Leads Only)').first().json.last_name }}",
          "customFields": {}
        },
        "type": "n8n-nodes-instantly.instantly",
        "typeVersion": 1,
        "position": [
          512,
          -112
        ],
        "id": "f30b964d-0d82-433b-a969-743a76eddc63",
        "name": "Add to Instantly Campaign",
        "credentials": {
          "instantlyApi": {
            "id": "TSGbMOFEJY9CmhHW",
            "name": "Instantly account"
          }
        }
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://mxnqfwuhvurajrgoefyg.supabase.co/rest/v1/rpc/add_to_campaign_history",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "supabaseApi",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          },
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={{ {\n  \"p_lead_id\": $('Assign Campaign (Fresh Leads Only)').first().json.id,\n  \"p_archetype\": $('Get Campaign Config').first().json.archetype,\n  \"p_campaign_id\": $('Get Campaign Config').first().json.instantly_campaign_id,\n  \"p_campaign_name\": $('Get Campaign Config').first().json.campaign_name,\n  \"p_added_at\": $('Assign Campaign (Fresh Leads Only)').first().json.entry_timestamp\n} }}",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          736,
          -112
        ],
        "id": "a71bb276-c677-4c33-8420-fbd768b30a45",
        "name": "Update Campaign History",
        "credentials": {
          "supabaseApi": {
            "id": "pvE2B3BDrLhctd5B",
            "name": "SupaBase Equity Connect"
          }
        }
      },
      {
        "parameters": {
          "tableId": "interactions",
          "fieldsUi": {
            "fieldValues": [
              {
                "fieldId": "lead_id",
                "fieldValue": "={{ $json.id }}"
              },
              {
                "fieldId": "broker_id",
                "fieldValue": "={{ $json.assigned_broker_id }}"
              },
              {
                "fieldId": "interaction_type",
                "fieldValue": "campaign_added"
              },
              {
                "fieldId": "interaction_data",
                "fieldValue": "={{ JSON.stringify({ campaign: $json.campaign_name, archetype: $json.archetype }) }}"
              }
            ]
          }
        },
        "id": "d4c7589d-e17b-4680-961f-3f7d237993f0",
        "name": "Track Campaign Addition",
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          944,
          -112
        ],
        "credentials": {
          "supabaseApi": {
            "id": "pvE2B3BDrLhctd5B",
            "name": "SupaBase Equity Connect"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "// Final summary\nconst allLeads = $input.all();\nconst totalLeads = allLeads.length;\nconst byArchetype = {\n  no_more_payments: 0,\n  cash_unlocked: 0,\n  high_equity_special: 0\n};\n\nallLeads.forEach(item => {\n  const archetype = item.json.archetype;\n  if (byArchetype[archetype] !== undefined) {\n    byArchetype[archetype]++;\n  }\n});\n\nconsole.log('━━━━━━━━━━━━━━━━━━━━━━━━━━━');\nconsole.log('Campaign Feeder Complete');\nconsole.log(`Total Leads: ${totalLeads}`);\nconsole.log(`No More Payments: ${byArchetype.no_more_payments}`);\nconsole.log(`Cash Unlocked: ${byArchetype.cash_unlocked}`);\nconsole.log(`High Equity Special: ${byArchetype.high_equity_special}`);\nconsole.log(`Completed: ${new Date().toISOString()}`);\nconsole.log('━━━━━━━━━━━━━━━━━━━━━━━━━━━');\n\nreturn [{\n  json: {\n    status: 'success',\n    total_leads: totalLeads,\n    breakdown: byArchetype,\n    completed_at: new Date().toISOString()\n  }\n}];"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          80,
          -304
        ],
        "id": "5e25bb93-ace2-477b-82a3-713187dc57f9",
        "name": "Log Completion Summary"
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.noOp",
        "typeVersion": 1,
        "position": [
          288,
          -304
        ],
        "id": "d83072a0-b55d-4970-ac7a-ef8f2c72edad",
        "name": "All Leads Processed"
      }
    ],
    "connections": {
      "Daily Trigger (8am)": {
        "main": [
          [
            {
              "node": "Get Campaign Ready Leads",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Campaign Ready Leads": {
        "main": [
          [
            {
              "node": "Loop Over Leads",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Loop Over Leads": {
        "main": [
          [
            {
              "node": "Log Completion Summary",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Assign Campaign (Fresh Leads Only)",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Campaign Config": {
        "main": [
          [
            {
              "node": "Add to Instantly Campaign",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Assign Campaign (Fresh Leads Only)": {
        "main": [
          [
            {
              "node": "Get Campaign Config",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Add to Instantly Campaign": {
        "main": [
          [
            {
              "node": "Update Campaign History",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Update Campaign History": {
        "main": [
          [
            {
              "node": "Track Campaign Addition",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Track Campaign Addition": {
        "main": [
          [
            {
              "node": "Loop Over Leads",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Log Completion Summary": {
        "main": [
          [
            {
              "node": "All Leads Processed",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "pinData": {},
    "meta": {
      "templateCredsSetupCompleted": true,
      "instanceId": "4ca45576dabef27a95f92525a5f6415fb3e8061f7037b2ec7fb4ba1bb1cb56c0"
    }
  }